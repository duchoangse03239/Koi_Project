
@{
    ViewBag.Title = "ParentTree";
    Layout = "~/Views/Layout/KoiLayout.cshtml";
}

<div class="container">
    <div class="page-header row">
        <div class="col-md-6">
            <span>Chọn mục xem:</span>
            <select class="selectpicker" data-style="btn-primary" onchange="location = this.options[this.selectedIndex].value;">
                <option value="@Url.Action("timeline/"+ViewBag.koiId, "InfoDetail")" >Dòng thời gian</option>
                <option value="@Url.Action("TimelineVertical/"+ViewBag.koiId , "InfoDetail" )">Ảnh sinh trưởng</option>
                <option value="@Url.Action("ListAchievement/"+ViewBag.koiId , "Achievement")">Giải thưởng</option>
                <option value="@Url.Action("ParentTree/"+ViewBag.koiId , "InfoDetail")"selected>Cây phả hệ</option>
                <option value="@Url.Action("AllOWner/"+ViewBag.koiId , "InfoDetail")">Chủ đã sở hữu</option>
            </select>
        </div>
    </div>
    <body>

        <script src="~/Scripts/go.js"></script>

        <script src="../release/go.js"></script>

        <span>Phả hệ</span>

        <div id="myDiagramDiv" style="width:100%; height:500px; background-color: #DAE4E4;"></div>


    </body>
</div>
    <script>
        var $ = go.GraphObject.make;
        var myDiagram =
          $(go.Diagram, "myDiagramDiv",
            {
                initialContentAlignment: go.Spot.Center, // center Diagram contents
                "undoManager.isEnabled": true, // enable Ctrl-Z to undo and Ctrl-Y to redo
                layout: $(go.TreeLayout, // specify a Diagram.layout that arranges trees
                          { angle: 90, layerSpacing: 35 })
            });

        // the template we defined earlier
        myDiagram.nodeTemplate =
          $(go.Node, "Horizontal",
            { background: "#44CCFF" },
            $(go.Picture,
              { margin: 10, width: 100, height: 100, background: "red" },
              new go.Binding("source")),
            $(go.TextBlock, "Default Text",
              { margin: 12, stroke: "white", font: "bold 16px sans-serif" },
              new go.Binding("stroke", "highlight", function () { return "2"; }),
              new go.Binding("text", "name")),
                {
                    cursor: "pointer",
                    click: function (e, obj) { window.open("http://koiportalvn.com/Koi/Details/" + encodeURIComponent(obj.part.data.key)); }
                }
          );



        var model = $(go.TreeModel);
        //model.nodeDataArray =
        //[
        //  { key: "1", name: "Don Meow", source: "cat1.png" },
        //  { key: "2", parent: "1", name: "Demeter", source: "cat2.png" },
        //  { key: "3", parent: "1", name: "Copricat", source: "cat3.png", highlight: true },
        //  { key: "4", parent: "3", name: "Jellylorum", source: "cat4.png" },
        //  { key: "5", parent: "3", name: "Alonzo", source: "cat5.png" },
        //  { key: "6", parent: "2", name: "Munkustrap", source: "cat6.png" }
        //];
        model.nodeDataArray =
        [
          @Html.Raw(@ViewBag.allKoi)
        ];
        myDiagram.model = model;
    </script>

