@using KoiManagement.Models
@model KoiManagement.Models.InfoDetail

@{
    ViewBag.Title = "Chỉnh sửa thông tin chi tiết";
    Layout = "~/Views/Layout/KoiLayout.cshtml";
    List<Medium> Image = ViewBag.ListImage;
}

<div class="container" id="add-koi">
        <h3 id="form-title" style="text-align:center; margin-top:40px;">CẬP NHẬT TRẠNG THÁI CHO "<span style="color:red;">@Model.Koi.KoiName</span>"</h3>
<div class="">
    <div class="row">
        <div class="col-sm-6 col-sm-offset-3">
            <hr />
            <label>Kích thước hiện tại</label>
            <input type="text" class="form-control" placeholder="Kích Thước" name="Size" id="Size" onkeypress="return (event.charCode == 8 || event.charCode == 0) ? null : event.charCode >= 48 && event.charCode <= 57" maxlength="3" value="@Model.Size">
            <label id="lblMessage_koi_size_fail" class="label-error"></label>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6 col-sm-offset-3">
            <label>Tình trạng sức khỏe</label>
            <input type="text" class="form-control" placeholder="Tình Trạng Sức Khỏe" name="HeathyStatus" id="HeathyStatus" value="@Model.HeathyStatus">
            <label id="lblMessage_koi_healthy_fail" class="label-error"></label>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6 col-sm-offset-3">
            <label>Mô tả trạng thái</label>
            <textarea rows="4" type="text" class="form-control" placeholder="Mô tả" name="Description" id="Description">@Model.Description</textarea>
            <label id="lblMessage_koi_description_fail" class="label-error"></label>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6 col-sm-offset-3">
            <label>Chọn ảnh cá</label>
            <label id="lblMessage_Image_fail" class="label-error"></label>
            <input type="file" accept="image/png, image/jpeg, image/gif" id="files" name="files" onchange="previewImg()" class="upload hides" multiple accept="image/*" />
            <output id="result">
                @{
                    if (Image != null)
                    {
                        for (var i = 0; i < Image.Count; i++)
                        {

                            <div class="imageBlock" id="tl_@i">
                                <img class="thumb" src="~/Content/Image/Detail/@Image.ElementAt(i).LinkImage" alt="images" />
                                <div class="deleteDiv">
                                    <img class="deleteIcon" src="~/Content/deleteImage.png" title="Xóa ảnh" onclick="deleteImage('@Image.ElementAt(i).MediaID','@i');" />

                                </div>
                                @if (i == 0)
                                {
                                    <div onclick="Avatar('@Image.ElementAt(i).LinkImage')" class='setAvatarDiv radio radio-lg'>
                                        <input type='radio' name='myRadio' checked="checked" value='' title='Đặt làm ảnh đại diện'>
                                    </div>
                                }
                                else
                                {
                                    <div onclick="Avatar('@Image.ElementAt(i).LinkImage')" class='setAvatarDiv radio radio-lg'><input type='radio' name='myRadio' value='' title='Đặt làm ảnh đại diện'></div>
                                }
                            </div>
                        }
                    }
                }
            </output>
        </div>
    </div>
    <div class="row add-button" style="margin-bottom:10px;">
        <div class="col-sm-6 col-sm-offset-3 align-right">
            <input type="hidden" name="DetailID" value="@Model.DetailID">
            <input type="hidden" name="Image" value="@Model.Image">
            <input type="hidden" name="KoiID" value="@Model.KoiID">
            <button id="btnEditDetail" class="btn btn-primary">Cập nhật</button>
            <a type="button" class="btn btn-primary" href='javascript:history.go(-1)'>Quay lại</a>
        </div>
    </div>
    <input type="hidden" id="Avatar" name="Avatar" value="change" />
</div>
    </div>
        <script>
    $(".camera.icon")
        .click(function () {
            $("#files").trigger('click');
        });


    var ImgList = [];

    function previewImg() {
        var filesInput = document.getElementById("files");
        var files = filesInput.files;
        var output = document.getElementById("result");
        var i = 0,
            len = files.length;
        (function readFile(n) {
            var reader = new FileReader();
            var f = files[n];
            var m = "onclick=Avatar('" + f.name + "')";

            reader.onload = function (e) {
                var div = document.createElement("span");
                div.className = "imageBlock";
                div.innerHTML = "<img class='thumb' src='" +
                    e.target.result +
                    "'" +
                    "title='" +
                    f.name +
                    "'/>  <div  class='deleteDiv'><img src='/Content/deleteImage.png' class='deleteIcon' title='Xóa ảnh'/></div>"+
                    "<div "+m +" class='setAvatarDiv radio radio-lg'><input type='radio' name='myRadio' value='' title='Đặt làm ảnh đại diện'></div>";
                output.insertBefore(div, null);
                div.children[1].addEventListener("click",
                    function () {
                        div.parentNode.removeChild(div);
                        var removeId = div.children[0].title;
                        for (var index = 0; index < ImgList.length; index++) {
                            if (ImgList[index].name === removeId) {
                                ImgList.splice(index, 1);
                                break;
                            }
                        }
                    });
                ImgList.push(f);
                if (n < len - 1) readFile(++n);
            };
            reader.readAsDataURL(f);
        }(i));
    }
        </script>

        <script>

    $(document).ready(function () {
        $(function () {
            $("#Size").focus();
        });

    });

    $(document).keypress(function (event) {
        var keycode = (event.keyCode ? event.keyCode : event.which);
        if (keycode == "13") {
            if (Validate()) {
                AddKoi();
            } else {
                return false;
            }
        }
    });

    var oldText;
    $("#btnEditDetail").click(function () {
        if (Validate()) {
            oldText = $(this).text();
            $(this).text('Xin đợi ...').attr('disabled', 'disabled');
            AddKoi();
        } else {
            return false;
        }
    });
    function Validate() {
        var Size = $('#Size').val();
        function isPositiveNumber(Size) {
            var regex = /^[0-9 \.\,\+]+$/;
            return regex.test(Size);
        };
        var files = $('#files').val();
        if (Size == "") {
            $('#lblMessage_koi_size_fail').text("Vui lòng nhập kích thước");
            $('#Size').focus();
            return false;
        }
        else if (!isPositiveNumber(Size)) {
            $('#lblMessage_koi_size_fail').text("Vui lòng nhập số cho kích thước của Koi!");
            $('#Size').focus();
            return false;
        }
        if (parseInt(Size) > 150) {
            $('#lblMessage_koi_size_fail').text("Kích thước phải nhỏ hơn 150cm");
            $('#Size').focus();
            return false;
        }

        if($('input[name=myRadio]:checked').length<=0)
        {
            $('#lblMessage_Image_fail').text("Vui lòng chọn ảnh đại diện cho Koi!");
            return false;
        }

        return true;
    }

    function AddKoi() {
        var fileUpload = $("#files").get(0);
        var files = fileUpload.files;
        // Looping over all files and add it to FormData object
        var fileData = new FormData();

        for (var i = 0; i < files.length; i++) {
            fileData.append(files[i].name, files[i]);
        }
        var t = $('#Avatar').val();
        // Adding one more key to FormData object
        fileData.append('Size', $('#Size').val());
        fileData.append('HeathyStatus', $('#HeathyStatus').val());
        fileData.append('Description', $('#Description').val());
        fileData.append('KoiID', @ViewBag.KoiID);
        fileData.append('DetailID', @Model.DetailID);
        fileData.append('Avatar',$('#Avatar').val());


        $('#lblMessage_koi_size_fail').text("");

        $.ajax({
            type: "POST",
            url: "@Url.Action("EditDetail")",
            contentType: false, // Not to set any content header
            processData: false,
            data: fileData,
            dataType: "Json",
            success: function(res) {
                $('#btnEditDetail').text(oldText).removeAttr('disabled');
                switch (res.Status) {
                case 2:
                    $('#lblMessage_koi_size_fail').text(res.Message);
                    break;
                case 3:
                    $('#..').text(res.Message);
                    $('#password').focus();
                    break;
                case 4:
                    break;
                case 1:
                    alert(res.Message);
                    window.location.href = res.RedirectTo;
                    break;
                case 0:
                    window.location.href = res.RedirectTo;
                    break;
                }
            }
        });
    }
    function deleteImage(ModelID, index) {
        $('#tl_'+index).remove();

        $.ajax({
            type: "POST",
            url: "@Url.Action("ListImageDelete")",
            datatype: "JSON",
            data: {
                ModelID: ModelID,
            },
            success: function(res) {
                switch (res.Status) {
                case 2:
                    $('#lbl_username_fail').text(res.Message);
                    $('#username').focus();
                    break;
                case 3:
                    $('#lbl_username_fail').text(res.Message);
                    $('#username').focus();
                    break;
                case 1:
                    alert(res.Message);
                    // Declare a proxy to reference the hub.
                    var notifications = $.connection.notificationsHub;
                    // Create a function that the hub can call to broadcast messages.
                    $.connection.hub.start().done(function () {
                        notifications.server.sendNotification(res.JsonObject, "test", "test");
                    });
                    window.location.reload();
                    break;
                }
            }
        }); // end ajax
    }
    function Avatar(o) {
        //document.getElementById(id).style.opacity = "0.5";
        document.getElementById('Avatar').value=o;

    }
        </script>
        <style>
            .setAvatarDiv {
                position: relative;
                top: -60px;
                left: 129px;
                width: 30px;
                height: 30px;
            }

            .radio-lg input[type=radio] {
                width: 26px;
                border: 2px solid;
                border-radius: 5px;
                /*checkbox border color*/
                border-color: #737373;
            }
        </style>
