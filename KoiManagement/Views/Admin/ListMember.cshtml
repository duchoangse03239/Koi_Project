@using PagedList.Mvc;
@{
    ViewBag.Title = "Danh sách người dùng";
    Layout = "~/Views/Layout/AdminLayout.cshtml";
    PagedList.IPagedList ListMember = ViewBag.ListMember;
}

<div id="page-wrapper">
    <form style="margin-top:10px;" class="searchForm" action="" method="get">
    <div class="row">
        <div class="col-md-8">
            <h1 class="page-header">Quản lý - Người dùng</h1>
        </div>
        <div class="col-md-4">
            <div class="input-group custom-search-form" style="margin-top: 50px;">
                <input type="text" name="searchString" id="searchString" value="@ViewBag.CurrentFilter" class="form-control" placeholder="Search...">
                <span class="input-group-btn">
                        <button class="btn btn-default" type="submit">
                            <i class="fa fa-search"></i>
                        </button>
                    </span>
            </div>
        </div>
        <!-- /.col-lg-12 -->
    </div>
    </form>
        <!-- /.row -->
        <div class="row">
            <div class="col-lg-12">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>STT</th>
                            <th>@Html.ActionLink("Tên đăng nhập", "ListMember", new { sortOrder = ViewBag.UserName, currentFilter = ViewBag.CurrentFilter })</th>
                            <th>@Html.ActionLink("Tên người dùng", "ListMember", new { sortOrder = ViewBag.Name, currentFilter = ViewBag.CurrentFilter })</th>
                            <th>@Html.ActionLink("Điện thoại", "ListMember", new { sortOrder = ViewBag.Phone, currentFilter = ViewBag.CurrentFilter })</th>
                            <th>@Html.ActionLink("Email", "ListMember", new { sortOrder = ViewBag.Email, currentFilter = ViewBag.CurrentFilter })</th>
                            <th>@Html.ActionLink("Trạng thái", "ListMember", new { sortOrder = ViewBag.Status, currentFilter = ViewBag.CurrentFilter })</th>
                            <th>@Html.ActionLink("P.Quyền", "ListMember", new { sortOrder = ViewBag.Role, currentFilter = ViewBag.CurrentFilter })</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                    @if (ViewBag.ListMember != null){
                    for (var item = 0; item < ViewBag.ListMember.Count; item++)
                    {
                        <tr>
                            <td>@Convert.ToInt32(@item + @ListMember.FirstItemOnPage - 1)</td>
                            <td>@ViewBag.ListMember[item].UserName</td>
                            <td>@ViewBag.ListMember[item].Name</td>
                            <td>@ViewBag.ListMember[item].Phone</td>
                            <td>@ViewBag.ListMember[item].Email</td>
                            @if (ViewBag.ListMember[item].Status)
                            {
                                <td>Hoạt động</td>
                            }
                            else
                            {
                                <td>Khóa</td>
                            }
                            @if (ViewBag.ListMember[item].Role == 1)
                            {
                                <td class="col-md-1"><a onclick="RemoveAdmin(@ViewBag.ListMember[item].MemberID);" class="btn btn-success btn-sm" role="button">Hủy quản trị</a></td>

                            }
                            else
                            {
                                <td class="col-md-1"><a onclick="MakeAdmin(@ViewBag.ListMember[item].MemberID, '@ViewBag.ListMember[item].UserName');" class="btn btn-success btn-sm" role="button">Người quản trị</a></td>
                            }

                            @if (ViewBag.ListMember[item].Status)
                            {
                                <td class="col-md-1"><a class="btn btn-danger btn-sm" onclick="Delete(@ViewBag.ListMember[item].MemberID, '@ViewBag.ListMember[item].UserName');" role="button">Khóa</a></td>
                            }

                            else
                            {
                                <td class="col-md-1"><a class="btn btn-danger btn-sm" onclick="Active(@ViewBag.ListMember[item].MemberID, '@ViewBag.ListMember[item].UserName');" role="button">Mở khóa</a></td>
                            }
                        </tr>
                        }
                    }
                    </tbody>
                </table>
                Trang @(ListMember.PageCount < ListMember.PageNumber ? 0 : ListMember.PageNumber) / @ListMember.PageCount
                @Html.PagedListPager(ListMember, page => Url.Action("ListMember", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
            </div>
            <!-- /.col-lg-8 -->
        </div>
        <!-- /.row -->
</div>
<script type="text/javascript">

    function MakeAdmin(MemberID,username) {
        if (confirm("Bạn có chắc chắn muốn chọn " + username + " làm người quản trị?")) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("MakeAdmin")",
                datatype: "JSON",
                data: {
                    MemberID: MemberID
                },
                success: function (res) {
                    if (res) {

                        window.location.reload();
                        // $('#test').html();
                        alert("Đặt làm quản trị thành công");
                    }
                }
            }); // end ajax
        }
    }
    function RemoveAdmin(MemberID, username) {
        if (confirm("Bạn có chắc chắn muốn huỷ quản trị " + username + " ?")) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("RemoveAdmin")",
                datatype: "JSON",
            data: {
                MemberID: MemberID
            },
            success: function (res) {
                if (res) {

                    window.location.reload();
                    // $('#test').html();
                    alert("Hủy quản trị thành công");
                }
            }
        }); // end ajax
    }
    }
    function Delete(MemberID,username) {
        if (confirm("Bạn có chắc chắn muốn khóa tài khoản " + username + "?")) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("DeActiveMember")",
                datatype: "JSON",
            data: {
                MemberID: MemberID
            },
            success: function (res) {
                if (res) {

                    window.location.reload();
                    // $('#test').html();
                    alert("Khóa thành công");
                }
            }
        }); // end ajax
    }
    }

    function Active(MemberID, username) {
        if (confirm("Bạn có chắc chắn muốn mở khóa tài khoản " + username + "?")) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("ActiveMember")",
                datatype: "JSON",
            data: {
                MemberID: MemberID
            },
            success: function (res) {
                if (res) {

                    window.location.reload();
                    // $('#test').html();
                    alert("Mở khóa thành công");
                }
            }
        }); // end ajax
    }
    }
</script>